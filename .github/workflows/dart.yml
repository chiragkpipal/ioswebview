name: iOS-ipa-build

on:
  workflow_dispatch:

jobs:
  build-ios:
    name: ðŸŽ‰Wanslu Shop iOS Build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
      
      - run: flutter pub get
      
      - run: pod repo update
        working-directory: ios

      # Set the bundle identifier
      - name: Update Bundle Identifier
        run: |
          /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier com.k3studio.wanslu" ios/Runner/Info.plist

      - run: flutter build ios --release --no-codesign

      # Create the necessary directories for signing
      - run: mkdir -p ~/certificates ~/provisioning

      # Decode the P12 certificate and write it to a file
      - name: Create P12 Certificate
        run: echo "${{ secrets.CERTIFICATE_P12 }}" | base64 --decode > ~/certificates/certificate.p12

      # Import the certificate into the keychain
      - name: Import Certificate
        run: |
          security import ~/certificates/certificate.p12 -P "${{ secrets.CERTIFICATE_PASSWORD }}" -A
          security list-keychains -s /Users/runner/Library/Keychains/login.keychain
          security unlock-keychain -p "${{ secrets.CERTIFICATE_PASSWORD }}" /Users/runner/Library/Keychains/login.keychain

      # Create and write the provisioning profile
      - name: Create Provisioning Profile
        run: |
          echo "${{ secrets.PROVISIONING_PROFILE }}" | base64 --decode > ~/provisioning/provisioning_profile.mobileprovision
          cp ~/provisioning/provisioning_profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

      # Set keychain partition list
      - name: Set Keychain Access
        run: |
          security set-key-partition-list -S apple-tool:,apple: -s -k "${{ secrets.CERTIFICATE_PASSWORD }}" /Users/runner/Library/Keychains/login.keychain

      # Code signing
      - name: Code Sign
        run: |
          xcodebuild -exportArchive -archivePath build/ios/iphoneos/Runner.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath build/ios/iphoneos

      # Create Payload directory and move the app
      - run: mkdir Payload
        working-directory: build/ios/iphoneos

      - run: mv Runner.app/ Payload
        working-directory: build/ios/iphoneos

      # Zip output
      - name: Zip output
        run: zip -qq -r -9 FlutterIpaExport.ipa Payload
        working-directory: build/ios/iphoneos

      # Upload binaries to release
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/ios/iphoneos/FlutterIpaExport.ipa
          tag: v1.0
          overwrite: true
          body: "This is the first release"
